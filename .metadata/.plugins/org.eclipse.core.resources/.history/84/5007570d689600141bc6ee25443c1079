package com.example.myfirstapp;


import com.parse.GetCallback;
import com.parse.ParseException;
import com.parse.ParseObject;
import com.parse.ParseQuery;
import com.parse.SaveCallback;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class AddItemActivity extends Activity  {
	
	//private TextView       txtScanResult;
	private EditText name;
	
	
	private ItemDetails item;
	
	private EditText titleEditText;
	private EditText detailsEditText;
	private EditText categoryEditText;
	private String itemTitle;
	private String itemDetails;
	private String itemCategory;
	
	private Button saveNoteButton;
	private Button cancelButton;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
		getActionBar().setDisplayHomeAsUpEnabled(true);
		
		
		setContentView(R.layout.add_item);
		Intent intent = this.getIntent();
		
		
		
		titleEditText = (EditText) findViewById(R.id.itemTitle);
	    detailsEditText = (EditText) findViewById(R.id.itemDetailsInput);
	    categoryEditText = (EditText) findViewById(R.id.itemCategory);
	    
	    if (intent.getExtras() != null) {
	        item = new ItemDetails(intent.getStringExtra("itemId"), intent.getStringExtra("itemTitle"), intent.getStringExtra("itemContent"), intent.getStringExtra("itemCategory"));
	 
	        titleEditText.setText(item.getTitle());
	        detailsEditText.setText(item.getContent());
	        categoryEditText.setText(item.getCategory());
	        
	    }

		
		
		
		//txtScanResult = (TextView) findViewById(R.id.scan_result);
		//name = (EditText)findViewById(R.id.itemTitle);
		
		//Bundle extras = getIntent().getExtras();
		//if (extras != null) {
		//	String title = extras.getString("title");
		//    String value = extras.getString("barcode");
		    //txtScanResult.setText(title);
		//    name.setText(title);
		    
		//}
		
		cancelButton = (Button)findViewById(R.id.cancel_button);
		cancelButton.setOnClickListener(new View.OnClickListener() {
	        @Override
	        public void onClick(View v) {
	        	Intent intent = new Intent(getApplicationContext(), ListItemActivity.class);
	        	startActivity(intent);
	        	finish();
	        }
	    });
		
		
	    saveNoteButton = (Button)findViewById(R.id.save_button);
	    saveNoteButton.setOnClickListener(new View.OnClickListener() {
	        @Override
	        public void onClick(View v) {
	            saveItem();
	        }
	    });
		
	}
	
	private void saveItem() {
		 
        itemTitle = titleEditText.getText().toString();
        itemDetails = detailsEditText.getText().toString();
        itemCategory = categoryEditText.getText().toString();
 
        itemTitle = itemTitle.trim();
        itemDetails = itemDetails.trim();
        itemCategory = itemCategory.trim();
 
        // If user doesn't enter a title or content, do nothing
        // If user enters title, but no content, save
        // If user enters content with no title, give warning
        // If user enters both title and content, save
 
        if (!itemTitle.isEmpty()) {
 
            // Check if post is being created or edited
 
            if (item == null) {
                // create new post
 
                ParseObject post = new ParseObject("Inventory");
                post.put("title", itemTitle);
                post.put("description", itemDetails);
                post.put("category", itemCategory);
                post.put("author", ParseUser.getCurrentUser());
                setProgressBarIndeterminateVisibility(true);
                post.saveInBackground(new SaveCallback() {
                    public void done(ParseException e) {
                    	setProgressBarIndeterminateVisibility(false);
                        if (e == null) {
                            // Saved successfully.
                            Toast.makeText(getApplicationContext(), "Saved", Toast.LENGTH_SHORT).show();
                        	Intent intent = new Intent(getApplicationContext(), AddItemActivity.class);
                        	startActivity(intent);
                        } else {
                            // The save failed.
                            Toast.makeText(getApplicationContext(), "Failed to Save", Toast.LENGTH_SHORT).show();
                            Log.d(getClass().getSimpleName(), "User update error: " + e);
                        }
                    }
                });
 
            }
            else {
                // update post
 
                ParseQuery<ParseObject> query = ParseQuery.getQuery("Inventory");
 
                // Retrieve the object by id
                query.getInBackground(item.getId(), new GetCallback<ParseObject>() {
                  public void done(ParseObject post, ParseException e) {
                    if (e == null) {
                      // Now let's update it with some new data.
                        post.put("title", itemTitle);
                        post.put("description", itemDetails);
                        post.put("category", itemCategory);
                        post.put("author", ParseUser.getCurrentUser());
                        setProgressBarIndeterminateVisibility(true);
                        post.saveInBackground(new SaveCallback() {
                            public void done(ParseException e) {
                            	setProgressBarIndeterminateVisibility(false);
                                if (e == null) {
                                    // Saved successfully.
                                    Toast.makeText(getApplicationContext(), "Saved", Toast.LENGTH_SHORT).show();
                                	Intent intent = new Intent(getApplicationContext(), AddItemActivity.class);
                                	startActivity(intent);
                                } else {
                                    // The save failed.
                                    Toast.makeText(getApplicationContext(), "Failed to Save", Toast.LENGTH_SHORT).show();
                                    Log.d(getClass().getSimpleName(), "User update error: " + e);
                                }
                            }
                        });
                    }
                  }
                });
            }
        }
        else if (itemTitle.isEmpty() && !itemDetails.isEmpty() || itemTitle.isEmpty() && !itemCategory.isEmpty()) {
            AlertDialog.Builder builder = new AlertDialog.Builder(AddItemActivity.this);
            builder.setMessage(R.string.edit_error_message)
                .setTitle(R.string.edit_error_title)
                .setPositiveButton(android.R.string.ok, null);
            AlertDialog dialog = builder.create();
            dialog.show();
        }
    }
	
	
	

}
